# migrations.RunSQL(
"""CREATE TABLE tsdb_lrpegel (
id INTEGER NOT NULL,
time TIMESTAMP NOT NULL
auswertungslauf INTEGER REFERENCES tsdb_auswertungslauf (id) ON DELETE CASCADE,
name VARCHAR (100),
position VARCHAR (100),
technology VARCHAR (100),
PRIMARY KEY (id)
);
"""

"""DROP TABLE tsdb_lrpegel;"""
"""DROP TABLE tsdb_schallleistungpegel;"""
"""DROP TABLE tsdb_maxpegel;"""
"""DROP TABLE tsdb_detected;"""
"""DROP TABLE tsdb_rejected CASCADE;"""
"""
CREATE TABLE "tsdb_schallleistungpegel" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "time" timestamp with time zone NOT NULL, "pegel" double precision NOT NULL, "messpunkt_id" bigint NULL);
DO $do$ BEGIN IF EXISTS ( SELECT * FROM timescaledb_information.hypertables WHERE hypertable_name = 'tsdb_schallleistungpegel') THEN RAISE EXCEPTION 'assert failed - ''tsdb_schallleistungpegel'' should not be a hyper table'; ELSE NULL; END IF;END; $do$;
ALTER TABLE "tsdb_schallleistungpegel" DROP CONSTRAINT "tsdb_schallleistungpegel_pkey";
SELECT create_hypertable('tsdb_schallleistungpegel', 'time', chunk_time_interval => interval '1 day', migrate_data => false);
"""
"""
zeitpunkt_im_beurteilungszeitraum = models.DateTimeField()
    zeitpunkt_durchfuehrung = models.DateTimeField()
    verhandene_messwerte = models.IntegerField()
    verwertebare_messwerte = models.IntegerField()
    in_berechnung_gewertete_messwerte =  models.IntegerField()
    zuordnung = models.ForeignKey(Projekt, on_delete=models.CASCADE)
        )
    ]
    """